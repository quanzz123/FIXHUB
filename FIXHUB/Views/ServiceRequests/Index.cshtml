
@section Styles{
    <style>
        .technician-card {
            transition: transform 0.3s;
            margin-bottom: 20px;
        }

            .technician-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .rating {
            color: #ffc107;
        }

        .expertise-badge {
            margin-right: 5px;
            margin-bottom: 5px;
        }

        .filter-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .profile-img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 50%;
        }

        .request-btn {
            width: 100%;
        }
    </style>
}

<div class="container mt-4">
    <h1 class="mb-4">Find a Technician</h1>

    <!-- Filter Section -->
    <div class="filter-section">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="expertiseFilter">Expertise</label>
                    <select class="form-control" id="expertiseFilter">
                        <option value="">All Expertise</option>
                        <option value="Plumbing">Plumbing</option>
                        <option value="Electrical">Electrical</option>
                        <option value="HVAC">HVAC</option>
                        <option value="Carpentry">Carpentry</option>
                        <option value="Painting">Painting</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="ratingFilter">Minimum Rating</label>
                    <select class="form-control" id="ratingFilter">
                        <option value="0">Any Rating</option>
                        <option value="3">3+ Stars</option>
                        <option value="4">4+ Stars</option>
                        <option value="5">5 Stars</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="searchFilter">Search</label>
                    <input type="text" class="form-control" id="searchFilter" placeholder="Search technicians...">
                </div>
            </div>
        </div>
    </div>

    <!-- Technicians List -->
    <div class="row" id="technicians-list">
        @await Component.InvokeAsync("ServicRequestsView")
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1">Previous</a>
            </li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>

<!-- Request Modal -->
<div class="modal fade" id="requestModal" tabindex="-1" role="dialog" aria-labelledby="requestModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="requestModalLabel">Request Technician</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="requestForm">
                    <input type="hidden" id="technicianId" name="technicianId">
                    <div class="form-group">
                        <label for="technicianName">Technician</label>
                        <input type="text" class="form-control" id="technicianName" readonly>
                    </div>
                    <div class="form-group">
                        <label for="serviceType">Service Type</label>
                        <select class="form-control" id="serviceType" name="serviceType" required>
                            <option value="">Loading service types...</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="title">Title</label>
                        <input type="text" class="form-control" id="title" placeholder="Brief title of your request" required>
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" rows="3" placeholder="Describe the service you need" required></textarea>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="Enter your full address" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="preferredDate">Preferred Date</label>
                            <input type="date" class="form-control" id="preferredDate" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="preferredTime">Preferred Time</label>
                            <input type="time" class="form-control" id="preferredTime" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="submitRequest">Submit Request</button>
            </div>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Success!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <i class="fas fa-check-circle text-success" style="font-size: 48px;"></i>
                    <h4 class="mt-3">Request Submitted</h4>
                    <p>Your technician request has been submitted successfully. You will be notified when the technician accepts your request.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
@section scripts {

    <script>
        $(document).ready(function() {
            let servicesLoaded = false;

            // Handle the request modal
            $('#requestModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget);
                var techId = button.data('id');
                var techName = button.data('name');
                var modal = $(this);

                modal.find('#technicianId').val(techId);
                modal.find('#technicianName').val(techName);

                // Load service types if not already loaded
                if (!servicesLoaded) {
                    // Show loading indicator
                    $('#serviceType').html('<option value="">Loading service types...</option>');

                    $.ajax({
                        url: '/ServiceRequests/GetServiceTypes',
                        type: 'GET',
                        dataType: 'json',
                        cache: false, // Prevent caching issues
                        success: function(data) {
                                const $select = $('#serviceType');
                            $select.empty().append('<option value="">Select Service Type</option>');

                            if (data && data.length > 0) {
                                data.forEach(function(service) {
                                    $select.append(`<option value="${service.id}">${service.name}</option>`);
                                });
                                servicesLoaded = true;

                                // Khởi tạo lại nice-select sau khi load dữ liệu
                                if ($.fn.niceSelect) {
                                    $select.niceSelect('update');
                                }
                            } else {
                                $select.append('<option value="">No service types available</option>');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error loading service types:", error);
                            console.error("Status:", status);
                            console.error("Response:", xhr.responseText);

                            $('#serviceType').html('<option value="">Failed to load service types</option>');
                            alert("Failed to load service types. Please check console for details.");
                        }
                    });
                }


            });

            // Handle form submission
                   $('#submitRequest').click(function(e) {
            e.preventDefault(); // Ngăn chặn submit mặc định

            var form = document.getElementById('requestForm');
            if (form.checkValidity()) {
                // Hiển thị loading indicator (nếu cần)
                $('#submitRequest').prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Sending...');

                // Thu thập dữ liệu form
                var requestData = {
                    technicianId: $('#technicianId').val(),
                    serviceTypeId: $('#serviceType').val(),
                    title: $('#title').val(),
                    description: $('#description').val(),
                    address: $('#address').val(),
                    preferredDate: $('#preferredDate').val(),
                    preferredTime: $('#preferredTime').val()
                };

                // Gửi dữ liệu bằng AJAX
                $.ajax({
                    url: '/ServiceRequest/CreateRequest', // Đường dẫn tới controller
                    type: 'POST',
                    
                    data: requestData,
                    success: function (response) {
                    if (response.success) {
                        // Reload lại trang sau khi tạo request thành công
                        location.reload();
                    } else {
                        showErrorModal(response.message || "Failed to create request.");
                    }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        showErrorModal('Failed to submit request. Please try again.');
                    },
                    complete: function() {
                        $('#submitRequest').prop('disabled', false).text('Submit Request');
                    }
                });
            } else {
                // Kích hoạt validation UI của browser
                form.reportValidity();
            }
        });

        function showErrorModal(message) {
            $('#errorMessage').text(message);
            $('#errorModal').modal('show');
        }

            // Simple filtering functionality for technician cards
            $('#expertiseFilter, #ratingFilter, #searchFilter').on('change keyup', function() {
                var expertise = $('#expertiseFilter').val().toLowerCase();
                var rating = parseFloat($('#ratingFilter').val()) || 0;
                var search = $('#searchFilter').val().toLowerCase();

                $('.technician-card').each(function() {
                    var card = $(this);
                    var cardExpertise = card.find('.expertise-badge').text().toLowerCase();
                    var cardRating = parseFloat(card.find('.rating span').text()) || 0;
                    var cardName = card.find('.card-title').text().toLowerCase();
                    var cardDesc = card.find('.card-text').text().toLowerCase();

                    var expertiseMatch = expertise === '' || cardExpertise.includes(expertise);
                    var ratingMatch = isNaN(rating) || cardRating >= rating;
                    var searchMatch = search === '' || cardName.includes(search) || cardDesc.includes(search);

                    if (expertiseMatch && ratingMatch && searchMatch) {
                        card.parent().show();
                    } else {
                        card.parent().hide();
                    }
                });
            });

            // Set minimum date for preferred date to today
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!
            var yyyy = today.getFullYear();
            today = yyyy + '-' + mm + '-' + dd;
            $('#preferredDate').attr('min', today);
        });
    </script>
}
@* @section scripts {
  
    <script>
         let servicesLoaded = false;
        // Handle the request modal
        $('#requestModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var techId = button.data('id');
            var techName = button.data('name');
            var modal = $(this);

            modal.find('#technicianId').val(techId);
            modal.find('#technicianName').val(techName);

            if (!servicesLoaded) {
            $.getJSON('/ServiceRequests/GetServiceTypes', function (data) {
                const $select = $('#serviceType');
                $select.empty().append('<option value="">Select Service Type</option>');

                data.forEach(service => {
                    $select.append(`<option value="${service.id}">${service.name}</option>`);
                });

                servicesLoaded = true;
            }).fail(function () {
                alert("Failed to load service types.");
            });
        }
        });
             
        // Handle form submission
        $('#submitRequest').click(function() {
            var form = document.getElementById('requestForm');
            if (form.checkValidity()) {
                // In a real application, you would send this data to your server
                // For this demo, we'll just show a success message
                $('#requestModal').modal('hide');
                setTimeout(function() {
                    $('#successModal').modal('show');
                }, 500);

                // Reset the form
                form.reset();
            } else {
                // Trigger browser's native validation
                form.reportValidity();
            }
        });

        // Simple filtering functionality
        $('#expertiseFilter, #ratingFilter, #searchFilter').on('change keyup', function() {
            var expertise = $('#expertiseFilter').val().toLowerCase();
            var rating = parseFloat($('#ratingFilter').val());
            var search = $('#searchFilter').val().toLowerCase();

            $('.technician-card').each(function() {
                var card = $(this);
                var cardExpertise = card.find('.expertise-badge').text().toLowerCase();
                var cardRating = parseFloat(card.find('.rating span').text());
                var cardName = card.find('.card-title').text().toLowerCase();
                var cardDesc = card.find('.card-text').text().toLowerCase();

                var expertiseMatch = expertise === '' || cardExpertise.includes(expertise);
                var ratingMatch = cardRating >= rating;
                var searchMatch = search === '' || cardName.includes(search) || cardDesc.includes(search);

                if (expertiseMatch && ratingMatch && searchMatch) {
                    card.parent().show();
                } else {
                    card.parent().hide();
                }
            });
        });
    </script>

} *@

  
